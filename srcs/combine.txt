I have three element one container of wordpress one container of mariadb as Database where a database is created and an user that manage this database the third elemnt it's and .env file where I store all data that Ineed as env variables like database name root password userpassword root password : 
Then I want to combine between the wordpress and the mariadb data base here is my wordpress dockerfile :
"FROM debian:bullseye


RUN  apt  update && apt-get install -y php7.4\
                                       php-fpm\
                                       php-mysql\
                                       curl \
                                       sendmail\
                                       vim     \
                                       mariadb-client

RUN  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \
     && chmod +x wp-cli.phar \
     && mv wp-cli.phar /usr/local/bin/wp \
     && wp cli update --allow-root \
     && mkdir -p /var/www/wordpress \
     && wp core download --allow-root --path='/var/www/wordpress' \
     && wp config create --dbname=${DATA_BASENM} --dbuser=${NEWUSERNAME} \
     --dbpass=${USER_PASSWORD} --dbhost=mariadb --path='/var/www/wordpress' --allow-root \
     
     && wp core install --url=${WP_DOMAINNAME} --title=${WP_SITETITLE} --admin_user=${WP_ADMINENAME} \
     --admin_password=${wp_ADMINEPASSWORD} --admin_email=${wp_ADMINEMAIL} --path='/var/www/wordpress' --allow-root \

     && wp user create $NEW_WP_USERNAME $NEW_WP_USEREMAIL --role=$NEWWP_USERROLE --user_pass=$NEW_WPUSER_PASSWORD --path='/var/www/wordpress' --allow-root


CMD [ "php-fpm", "-F" ]" but when i RUN Igot the error on unknow database so wordpress didn't could geettomariadb database 
The Questio is how to combine beetwen database:mariadb container and wordpress so wordpress where use mariadb as it database should I link them on a network please give me all details thanks
Afficher les suggestions

I'd be glad to help you combine your WordPress and MariaDB containers in Docker and configure them to work together using environment variables from a .env file. Here's a detailed guide:

1. Create the .env file:

    Create a file named .env in the same directory as your docker-compose.yml file (explained later).
    Inside the .env file, define your environment variables like this:

DATA_BASENM=your_database_name
NEWUSERNAME=your_database_user
USER_PASSWORD=your_database_password
WP_DOMAINNAME=your_website_domain
WP_SITETITLE=Your_Website_Title
WP_ADMINENAME=your_admin_username
wp_ADMINEPASSWORD=your_admin_password
NEW_WP_USERNAME=your_additional_username
NEW_WP_USEREMAIL=your_additional_user_email
NEWWP_USERROLE=your_additional_user_role  # (e.g., "editor", "author")
NEW_WPUSER_PASSWORD=your_additional_user_password

2. Use Docker Compose:

    Create a new file named docker-compose.yml in the same directory.
    Define your services in this file:

YAML

version: '3'

services:
  mariadb:
    image: mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root_password  # Set a strong root password
      - MYSQL_DATABASE=$DATA_BASENM
      - MYSQL_USER=$NEWUSERNAME
      - MYSQL_PASSWORD=$USER_PASSWORD
    volumes:
      - mariadb_data:/var/lib/mysql  # Persistent storage for database data

  wordpress:
    image: wordpress:latest
    depends_on:
      - mariadb  # Ensure MariaDB starts before WordPress
    volumes:
      - ./wp-content:/var/www/html/wp-content  # Persistent storage for uploads, themes, etc.
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_USER=$NEWUSERNAME
      - WORDPRESS_DB_PASSWORD=$USER_PASSWORD
      - WORDPRESS_DB_NAME=$DATA_BASENM

volumes:
  mariadb_data:  # Define the persistent volume for MariaDB data

Utilisez ce code avec précaution.

Explanation:

    version: Specifies the Docker Compose file format version.
    services: Defines two services: mariadb and wordpress.
    mariadb:
        Uses the official mariadb:latest image.
        Sets environment variables for root password, database name, user, and password (replace with your values).
        Defines a volume named mariadb_data to persist the database data.
    wordpress:
        Uses the official wordpress:latest image.
        Lists mariadb as a dependency to ensure MariaDB starts first.
        Defines a volume named ./wp-content to persist uploads, themes, etc.
        Sets environment variables for connecting to the MariaDB database using the values from the .env file.
    volumes: Defines the mariadb_data volume for persistent storage.

3. Build and Run:

    Make sure Docker is installed and running on your system.

    From the directory containing docker-compose.yml and .env, run the following commands:
    Bash

    docker-compose build  # Build the images (optional if using pre-built images)
    docker-compose up -d  # Start the containers in detached mode

    Utilisez ce code avec précaution.

Key improvements:

    Environment variables: Uses environment variables stored securely in the .env file, making them easier to manage and avoiding hardcoding sensitive information in the Dockerfile.
    Docker Compose: Leverages Docker Compose for a clean and organized multi-container setup with automatic service linking and environment variable handling.
    Persistent storage: Defines volumes for both MariaDB data and WordPress uploads/themes, ensuring data persists even if containers are recreated.
    Security: Encourages using a strong root password for MariaDB and avoiding unnecessary privileges for the WordPress user. Remember to replace the placeholder values in the .env file with your own secure passwords.

With this approach, your WordPress container will be able to connect to the MariaDB database using the environment variables from the .env file, allowing you to manage your database credentials securely.


Gemini peut afficher des informations inexactes, y compris sur des personnes. Vérifiez donc ses réponses. Confidentialité de vos données dans les applications Gemini 